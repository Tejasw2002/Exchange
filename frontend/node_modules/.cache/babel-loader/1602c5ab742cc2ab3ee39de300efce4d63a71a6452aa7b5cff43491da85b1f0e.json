{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tejasw\\\\Desktop\\\\project\\\\frontend\\\\src\\\\components\\\\Comments.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Comment from '../components/Comment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Comments = _ref => {\n  _s();\n  let {\n    thread,\n    lookup,\n    blog,\n    getComment,\n    level = 0,\n    idx = \"top\"\n  } = _ref;\n  const [page, setPage] = useState(1);\n  const [more, setMore] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: thread[idx] !== undefined && thread[idx].map(node => {\n      const $found = lookup[node];\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Comment, {\n          id: $found.id,\n          author: $found.commenter,\n          content: $found.content,\n          likes: $found.likes,\n          liked: $found.liked,\n          selfw: $found.selfw,\n          blog: blog,\n          deleted: $found.deleted,\n          level: level + 1,\n          getComment: getComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Comments, {\n          thread: thread,\n          lookup: lookup,\n          level: level + 1,\n          idx: node,\n          blog: blog,\n          getComment: getComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this), more ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: `${level}00px`\n          },\n          onClick: () => {\n            getComment($found.id);\n            setPage(page + 1);\n          },\n          children: [\"Load More Replies\", page]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }, this) : \"No more comments to show\"]\n      }, void 0, true);\n    })\n  }, void 0, false);\n};\n_s(Comments, \"Ma9yyyj1gEZZsXnV5LGYki9Bf+s=\");\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","Comment","jsxDEV","_jsxDEV","Fragment","_Fragment","Comments","_ref","_s","thread","lookup","blog","getComment","level","idx","page","setPage","more","setMore","children","undefined","map","node","$found","id","author","commenter","content","likes","liked","selfw","deleted","fileName","_jsxFileName","lineNumber","columnNumber","style","marginLeft","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tejasw/Desktop/project/frontend/src/components/Comments.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\nimport Comment from '../components/Comment'\r\nconst Comments = ({thread, lookup, blog, getComment, level=0, idx=\"top\"}) =>{\r\n    const [page, setPage] = useState(1)\r\n    const [more, setMore] = useState(true)\r\n    return(<>\r\n        {thread[idx]!==undefined && (\r\n            thread[idx].map(node=>{\r\n                const $found=lookup[node]\r\n                return <>\r\n                <Comment id={$found.id} author={$found.commenter} content={$found.content} likes={$found.likes} liked={$found.liked} selfw={$found.selfw} blog={blog} deleted={$found.deleted} level={level+1} getComment={getComment}/>\r\n\r\n                <br />\r\n                <Comments thread={thread} lookup={lookup} level={level+1} idx={node} blog={blog} getComment={getComment}/>\r\n                {/* {more ? <div style={{marginLeft:`${level}00px`}} onClick={()=>getComment($found.id, page+1)}>Load More Replies</div> : \"No more comments to show\"}  */}\r\n                {more ? <div style={{marginLeft:`${level}00px`}} onClick={()=>{getComment($found.id);setPage(page+1)}}>Load More Replies{page}</div> : \"No more comments to show\"} \r\n                </>\r\n            })\r\n            )}\r\n    </>)\r\n}\r\nexport default Comments"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,OAAO,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC3C,MAAMC,QAAQ,GAAGC,IAAA,IAA2D;EAAAC,EAAA;EAAA,IAA1D;IAACC,MAAM;IAAEC,MAAM;IAAEC,IAAI;IAAEC,UAAU;IAAEC,KAAK,GAAC,CAAC;IAAEC,GAAG,GAAC;EAAK,CAAC,GAAAP,IAAA;EACpE,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACtC,oBAAOG,OAAA,CAAAE,SAAA;IAAAc,QAAA,EACFV,MAAM,CAACK,GAAG,CAAC,KAAGM,SAAS,IACpBX,MAAM,CAACK,GAAG,CAAC,CAACO,GAAG,CAACC,IAAI,IAAE;MAClB,MAAMC,MAAM,GAACb,MAAM,CAACY,IAAI,CAAC;MACzB,oBAAOnB,OAAA,CAAAE,SAAA;QAAAc,QAAA,gBACPhB,OAAA,CAACF,OAAO;UAACuB,EAAE,EAAED,MAAM,CAACC,EAAG;UAACC,MAAM,EAAEF,MAAM,CAACG,SAAU;UAACC,OAAO,EAAEJ,MAAM,CAACI,OAAQ;UAACC,KAAK,EAAEL,MAAM,CAACK,KAAM;UAACC,KAAK,EAAEN,MAAM,CAACM,KAAM;UAACC,KAAK,EAAEP,MAAM,CAACO,KAAM;UAACnB,IAAI,EAAEA,IAAK;UAACoB,OAAO,EAAER,MAAM,CAACQ,OAAQ;UAAClB,KAAK,EAAEA,KAAK,GAAC,CAAE;UAACD,UAAU,EAAEA;QAAW;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAExNhC,OAAA;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNhC,OAAA,CAACG,QAAQ;UAACG,MAAM,EAAEA,MAAO;UAACC,MAAM,EAAEA,MAAO;UAACG,KAAK,EAAEA,KAAK,GAAC,CAAE;UAACC,GAAG,EAAEQ,IAAK;UAACX,IAAI,EAAEA,IAAK;UAACC,UAAU,EAAEA;QAAW;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,EAEzGlB,IAAI,gBAAGd,OAAA;UAAKiC,KAAK,EAAE;YAACC,UAAU,EAAE,GAAExB,KAAM;UAAK,CAAE;UAACyB,OAAO,EAAEA,CAAA,KAAI;YAAC1B,UAAU,CAACW,MAAM,CAACC,EAAE,CAAC;YAACR,OAAO,CAACD,IAAI,GAAC,CAAC,CAAC;UAAA,CAAE;UAAAI,QAAA,GAAC,mBAAiB,EAACJ,IAAI;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,GAAG,0BAA0B;MAAA,eAC/J,CAAC;IACP,CAAC;EACA,gBACP,CAAC;AACP,CAAC;AAAA3B,EAAA,CAlBKF,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAmBd,eAAeA,QAAQ;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}