{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tejasw\\\\Desktop\\\\project\\\\frontend\\\\src\\\\components\\\\Formfield.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Formfield = _ref => {\n  _s();\n  let {\n    type,\n    name,\n    label,\n    error,\n    options\n  } = _ref;\n  const [passwordType, setpasswordType] = useState('password');\n  const [icon, setIcon] = useState(\"&#xe106;\");\n  function toggle(event) {\n    if (!show) {\n      if (icon === \"&#xe106;\") setIcon(\"&#128065;\");else setIcon(\"&#128065;\");\n      if (passwordType === 'password') setpasswordType('text');else setpasswordType('password');\n    }\n  }\n  if (type == 'button') return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"submit\",\n    value: label,\n    name: name,\n    id: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 17\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formfield\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), [\"text\", \"number\", \"email\"].includes(type) && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      name: name,\n      id: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 56\n    }, this), type === 'textarea' && /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: name,\n      id: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 31\n    }, this), type === 'password' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: passwordType,\n        name: name,\n        id: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"toggle\",\n        onClick: event => toggle(event),\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), type === 'select' && /*#__PURE__*/_jsxDEV(\"select\", {\n      name: name,\n      id: name,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        selected: true,\n        default: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.toLowerCase(),\n        children: option\n      }, option.toLowerCase(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Formfield, \"uD24W08fVx8wMvv0W83mJBkflgw=\");\n_c = Formfield;\nexport default Formfield;\nvar _c;\n$RefreshReg$(_c, \"Formfield\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Formfield","_ref","_s","type","name","label","error","options","passwordType","setpasswordType","icon","setIcon","toggle","event","show","value","id","fileName","_jsxFileName","lineNumber","columnNumber","className","children","htmlFor","includes","onClick","selected","default","map","option","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/Tejasw/Desktop/project/frontend/src/components/Formfield.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nconst Formfield = ({type, name, label, error, options}) => {\r\n    const [passwordType, setpasswordType] = useState('password')\r\n    const [icon, setIcon] = useState(\"&#xe106;\")\r\n    \r\n    function toggle(event){\r\n        if(!show)\r\n        {\r\n            if (icon===\"&#xe106;\") setIcon(\"&#128065;\"); else setIcon(\"&#128065;\")\r\n            if (passwordType==='password') setpasswordType('text'); else setpasswordType('password')\r\n        }\r\n    }\r\n\r\n    if(type=='button')\r\n        return (<button type=\"submit\" value={label} name={name} id={name}/>)\r\n  return (\r\n    <div className=\"formfield\">\r\n        <label htmlFor={name}>\r\n            <h3>{label}</h3>\r\n        </label>\r\n        {[\"text\", \"number\", \"email\"].includes(type) && <input type={type} name={name} id={name}></input>}\r\n        {type==='textarea' && <textarea name={name} id={name}></textarea>}\r\n        {type==='password' && <>\r\n            <input type={passwordType} name={name} id={name}/>\r\n            <i className=\"toggle\" onClick={(event)=>toggle(event)}>{icon}</i>\r\n        </>}\r\n        {type==='select' && <select name={name} id={name}>\r\n            <option value=\"\" selected default></option>\r\n            {options.map(option=>\r\n                <option value={option.toLowerCase()} key={option.toLowerCase()}>{option}\r\n                </option>\r\n            )}\r\n        </select>}\r\n        <div className=\"error\">{error}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Formfield"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}