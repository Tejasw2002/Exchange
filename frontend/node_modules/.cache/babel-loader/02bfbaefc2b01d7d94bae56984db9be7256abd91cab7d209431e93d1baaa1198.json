{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tejasw\\\\Desktop\\\\project\\\\frontend\\\\src\\\\components\\\\Formfield.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction toggle(event) {\n  const text = event.target.innerText;\n  if (text == \"&#xe106;\") {\n    event.target.innerText = \"&#128065;\";\n    event.target.parentElement.firstElementChild.type = 'text';\n  } else {\n    event.target.innerText = \"&#xe106;\";\n    event.target.parentElement.firstElementChild.type = 'password';\n  }\n}\nfunction getComponent(type, options, name, label) {\n  switch (type) {\n    case 'password':\n      /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: name,\n          id: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"toggle\",\n          onClick: event => toggle,\n          children: \"\\uD83D\\uDC41\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n      break;\n    case 'select':\n      /*#__PURE__*/_jsxDEV(\"select\", {\n        name: name,\n        id: name,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          selected: true,\n          default: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.toLowerCase(),\n          children: option\n        }, option.toLowerCase(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this);\n      break;\n    case 'button':\n      /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        value: label,\n        name: name,\n        id: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this);\n      break;\n    case 'textarea':\n      /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: name,\n        id: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this);\n      break;\n    default:\n      /*#__PURE__*/_jsxDEV(\"input\", {\n        type: type,\n        name: name,\n        id: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this);\n      break;\n  }\n}\nconst Formfield = _ref => {\n  let {\n    type,\n    name,\n    label,\n    error,\n    options\n  } = _ref;\n  if (type == 'button') return getComponent('button', options, name, label);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formfield\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), getComponent(type, name, label, options), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = Formfield;\nexport default Formfield;\nvar _c;\n$RefreshReg$(_c, \"Formfield\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","toggle","event","text","target","innerText","parentElement","firstElementChild","type","getComponent","options","name","label","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","value","selected","default","map","option","toLowerCase","Formfield","_ref","error","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/Tejasw/Desktop/project/frontend/src/components/Formfield.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nfunction toggle(event){\r\n    const text = event.target.innerText\r\n    if(text==\"&#xe106;\"){\r\n        event.target.innerText = \"&#128065;\"\r\n        event.target.parentElement.firstElementChild.type = 'text'\r\n    }\r\n    else{\r\n        event.target.innerText = \"&#xe106;\"\r\n        event.target.parentElement.firstElementChild.type = 'password'\r\n    }\r\n}\r\n\r\nfunction getComponent(type, options, name, label){\r\n    switch(type){\r\n        case 'password':\r\n            <>\r\n                <input type=\"password\" name={name} id={name}/>\r\n                <i className=\"toggle\" onClick={(event)=>toggle}>&#128065;</i>\r\n            </>\r\n        break;\r\n        case 'select':\r\n            <select name={name} id={name}>\r\n                <option value=\"\" selected default></option>\r\n                {options.map(option=>\r\n                    <option value={option.toLowerCase()} key={option.toLowerCase()}>{option}\r\n                    </option>\r\n                )}\r\n            </select>\r\n        break;\r\n        case 'button':\r\n            <button type=\"submit\" value={label} name={name} id={name}/>\r\n        break;\r\n        case 'textarea':\r\n            <textarea name={name} id={name}></textarea>\r\n        break;\r\n        default:\r\n            <input type={type} name={name} id={name}></input>\r\n        break;\r\n    }\r\n}\r\n\r\nconst Formfield = ({type, name, label, error, options}) => {\r\n    if(type=='button')\r\n        return getComponent('button', options, name, label)\r\n  return (\r\n    <div className=\"formfield\">\r\n        <label htmlFor={name}>\r\n            <h3>{label}</h3>\r\n        </label>\r\n        {getComponent(type, name, label, options)}\r\n        <div className=\"error\">{error}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Formfield"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,SAASC,MAAMA,CAACC,KAAK,EAAC;EAClB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,SAAS;EACnC,IAAGF,IAAI,IAAE,UAAU,EAAC;IAChBD,KAAK,CAACE,MAAM,CAACC,SAAS,GAAG,WAAW;IACpCH,KAAK,CAACE,MAAM,CAACE,aAAa,CAACC,iBAAiB,CAACC,IAAI,GAAG,MAAM;EAC9D,CAAC,MACG;IACAN,KAAK,CAACE,MAAM,CAACC,SAAS,GAAG,UAAU;IACnCH,KAAK,CAACE,MAAM,CAACE,aAAa,CAACC,iBAAiB,CAACC,IAAI,GAAG,UAAU;EAClE;AACJ;AAEA,SAASC,YAAYA,CAACD,IAAI,EAAEE,OAAO,EAAEC,IAAI,EAAEC,KAAK,EAAC;EAC7C,QAAOJ,IAAI;IACP,KAAK,UAAU;MACX,aAAAV,OAAA,CAAAE,SAAA;QAAAa,QAAA,gBACIf,OAAA;UAAOU,IAAI,EAAC,UAAU;UAACG,IAAI,EAAEA,IAAK;UAACG,EAAE,EAAEH;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC9CpB,OAAA;UAAGqB,SAAS,EAAC,QAAQ;UAACC,OAAO,EAAGlB,KAAK,IAAGD,MAAO;UAAAY,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,eAC/D,CAAC;MACP;IACA,KAAK,QAAQ;MACT,aAAApB,OAAA;QAAQa,IAAI,EAAEA,IAAK;QAACG,EAAE,EAAEH,IAAK;QAAAE,QAAA,gBACzBf,OAAA;UAAQuB,KAAK,EAAC,EAAE;UAACC,QAAQ;UAACC,OAAO;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,EAC1CR,OAAO,CAACc,GAAG,CAACC,MAAM,iBACf3B,OAAA;UAAQuB,KAAK,EAAEI,MAAM,CAACC,WAAW,CAAC,CAAE;UAAAb,QAAA,EAA6BY;QAAM,GAA7BA,MAAM,CAACC,WAAW,CAAC,CAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CACZ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;MACb;IACA,KAAK,QAAQ;MACT,aAAApB,OAAA;QAAQU,IAAI,EAAC,QAAQ;QAACa,KAAK,EAAET,KAAM;QAACD,IAAI,EAAEA,IAAK;QAACG,EAAE,EAAEH;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;MAC/D;IACA,KAAK,UAAU;MACX,aAAApB,OAAA;QAAUa,IAAI,EAAEA,IAAK;QAACG,EAAE,EAAEH;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;MAC/C;IACA;MACI,aAAApB,OAAA;QAAOU,IAAI,EAAEA,IAAK;QAACG,IAAI,EAAEA,IAAK;QAACG,EAAE,EAAEH;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;MACrD;EACJ;AACJ;AAEA,MAAMS,SAAS,GAAGC,IAAA,IAAyC;EAAA,IAAxC;IAACpB,IAAI;IAAEG,IAAI;IAAEC,KAAK;IAAEiB,KAAK;IAAEnB;EAAO,CAAC,GAAAkB,IAAA;EAClD,IAAGpB,IAAI,IAAE,QAAQ,EACb,OAAOC,YAAY,CAAC,QAAQ,EAAEC,OAAO,EAAEC,IAAI,EAAEC,KAAK,CAAC;EACzD,oBACEd,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAN,QAAA,gBACtBf,OAAA;MAAOgC,OAAO,EAAEnB,IAAK;MAAAE,QAAA,eACjBf,OAAA;QAAAe,QAAA,EAAKD;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,EACPT,YAAY,CAACD,IAAI,EAAEG,IAAI,EAAEC,KAAK,EAAEF,OAAO,CAAC,eACzCZ,OAAA;MAAKqB,SAAS,EAAC,OAAO;MAAAN,QAAA,EAAEgB;IAAK;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAAAa,EAAA,GAZKJ,SAAS;AAcf,eAAeA,SAAS;AAAA,IAAAI,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}