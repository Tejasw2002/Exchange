{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tejasw\\\\Desktop\\\\project\\\\frontend\\\\src\\\\components\\\\Formfield.jsx\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction handleSize() {\n  var _s = $RefreshSig$();\n  const Formfield = _ref => {\n    _s();\n    let {\n      type,\n      name,\n      label,\n      error,\n      options\n    } = _ref;\n    const [passwordType, setpasswordType] = useState('password');\n    function toggle(event) {\n      if (passwordType === 'password') setpasswordType('text');else setpasswordType('password');\n    }\n    if (type === 'button') return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formfield\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: name,\n        id: name,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formfield\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: name,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), [\"text\", \"number\", \"email\"].includes(type) && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: type,\n        name: name,\n        id: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 56\n      }, this), type === 'textarea' && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: name,\n        id: name,\n        onInput: event => handleSize(event)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 31\n      }, this), type === 'password' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: passwordType,\n          name: name,\n          id: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"toggle\",\n          onClick: event => toggle(event),\n          children: passwordType === 'password' ? \"Show Password\" : \"Hide Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), type === 'select' && /*#__PURE__*/_jsxDEV(\"select\", {\n        name: name,\n        id: name,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          selected: true,\n          default: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.toLowerCase(),\n          children: option\n        }, option.toLowerCase(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this);\n  };\n  _s(Formfield, \"ziLw3Fg/PRrhyC92vPuaPLjaLx8=\");\n}\nexport default Formfield;","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","handleSize","_s","$RefreshSig$","Formfield","_ref","type","name","label","error","options","passwordType","setpasswordType","toggle","event","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","includes","onInput","onClick","value","selected","default","map","option","toLowerCase"],"sources":["C:/Users/Tejasw/Desktop/project/frontend/src/components/Formfield.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction handleSize(){\r\n    \r\n\r\n\r\nconst Formfield = ({type, name, label, error, options}) => {\r\n    const [passwordType, setpasswordType] = useState('password')\r\n    function toggle(event){\r\n        if (passwordType==='password') setpasswordType('text'); else setpasswordType('password')\r\n    }\r\n    if(type==='button')\r\n        return (<div className=\"formfield\">\r\n            <button type=\"submit\" name={name} id={name}>{label}</button>\r\n            </div>)\r\n  return (\r\n    <div className=\"formfield\">\r\n        <label htmlFor={name}>\r\n            <h3>{label}</h3>\r\n        </label>\r\n        {[\"text\", \"number\", \"email\"].includes(type) && <input type={type} name={name} id={name}></input>}\r\n        {type==='textarea' && <textarea name={name} id={name} onInput={(event)=>handleSize(event)}></textarea>}\r\n        {type==='password' && \r\n        <>\r\n            <input type={passwordType} name={name} id={name}/>\r\n            <span className=\"toggle\" onClick={(event)=>toggle(event)}>{passwordType==='password' ? \"Show Password\" : \"Hide Password\"}</span>\r\n        </>}\r\n        {type==='select' && <select name={name} id={name}>\r\n            <option value=\"\" selected default></option>\r\n            {options.map(option=>\r\n                <option value={option.toLowerCase()} key={option.toLowerCase()}>{option}\r\n                </option>\r\n            )}\r\n        </select>}\r\n        <div className=\"error\">{error}</div>\r\n    </div>\r\n  )\r\n}\r\n}\r\nexport default Formfield"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}