{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tejasw\\\\Desktop\\\\project\\\\frontend\\\\src\\\\components\\\\Formfield.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Formfield = _ref => {\n  let {\n    type,\n    name,\n    label,\n    error,\n    options\n  } = _ref;\n  function toggle(event) {\n    const text = event.target.innerText;\n    if (text == \"&#xe106;\") {\n      event.target.innerText = \"&#128065;\";\n      event.target.parentElement.firstElementChild.type = 'text';\n    } else {\n      event.target.innerText = \"&#xe106;\";\n      event.target.parentElement.firstElementChild.type = 'password';\n    }\n  }\n  function getComponent(type, options, name, label) {\n    switch (type) {\n      case 'password':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: name,\n            id: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"toggle\",\n            onClick: event => toggle,\n            children: \"\\uD83D\\uDC41\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true);\n        break;\n      case 'select':\n        /*#__PURE__*/_jsxDEV(\"select\", {\n          name: name,\n          id: name,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            selected: true,\n            default: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: option.toLowerCase(),\n            children: option\n          }, option.toLowerCase(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this);\n        break;\n      case 'button':\n        /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          value: label,\n          name: name,\n          id: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this);\n        break;\n      case 'textarea':\n        /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: name,\n          id: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this);\n        break;\n      default:\n        /*#__PURE__*/_jsxDEV(\"input\", {\n          type: type,\n          name: name,\n          id: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this);\n        break;\n    }\n  }\n  if (type == 'button') return getComponent('button', options, name, label);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formfield\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), getComponent(type, name, label, options), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c = Formfield;\nexport default Formfield;\nvar _c;\n$RefreshReg$(_c, \"Formfield\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Formfield","_ref","type","name","label","error","options","toggle","event","text","target","innerText","parentElement","firstElementChild","getComponent","children","id","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","value","selected","default","map","option","toLowerCase","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/Tejasw/Desktop/project/frontend/src/components/Formfield.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nconst Formfield = ({type, name, label, error, options}) => {\r\n\r\nfunction toggle(event){\r\n    const text = event.target.innerText\r\n    if(text==\"&#xe106;\"){\r\n        event.target.innerText = \"&#128065;\"\r\n        event.target.parentElement.firstElementChild.type = 'text'\r\n    }\r\n    else{\r\n        event.target.innerText = \"&#xe106;\"\r\n        event.target.parentElement.firstElementChild.type = 'password'\r\n    }\r\n}\r\n\r\nfunction getComponent(type, options, name, label){\r\n    switch(type){\r\n        case 'password':\r\n            return(<>\r\n                <input type=\"password\" name={name} id={name}/>\r\n                <i className=\"toggle\" onClick={(event)=>toggle}>&#128065;</i>\r\n            </>)\r\n        break;\r\n        case 'select':\r\n            <select name={name} id={name}>\r\n                <option value=\"\" selected default></option>\r\n                {options.map(option=>\r\n                    <option value={option.toLowerCase()} key={option.toLowerCase()}>{option}\r\n                    </option>\r\n                )}\r\n            </select>\r\n        break;\r\n        case 'button':\r\n            <button type=\"submit\" value={label} name={name} id={name}/>\r\n        break;\r\n        case 'textarea':\r\n            <textarea name={name} id={name}></textarea>\r\n        break;\r\n        default:\r\n            <input type={type} name={name} id={name}></input>\r\n        break;\r\n    }\r\n}\r\n\r\n    if(type=='button')\r\n        return getComponent('button', options, name, label)\r\n  return (\r\n    <div className=\"formfield\">\r\n        <label htmlFor={name}>\r\n            <h3>{label}</h3>\r\n        </label>\r\n        {getComponent(type, name, label, options)}\r\n        <div className=\"error\">{error}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Formfield"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}