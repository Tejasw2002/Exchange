{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tejasw\\\\Desktop\\\\project\\\\frontend\\\\src\\\\components\\\\Formfield.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction handleSize() {\n  const tx = this;\n  // for (let i = 0; i < tx.length; i++) {\n  //   tx[i].setAttribute(\"style\", \"height:\" + (tx[i].scrollHeight) + \"px;overflow-y:hidden;\");\n  //   tx[i].addEventListener(\"input\", OnInput, false);\n  // }\n  console.log(this);\n}\nfunction OnInput() {\n  this.style.height = 0;\n  this.style.height = this.scrollHeight + \"px\";\n}\n_c = OnInput;\nconst Formfield = _ref => {\n  _s();\n  let {\n    type,\n    name,\n    label,\n    error,\n    options\n  } = _ref;\n  const [passwordType, setpasswordType] = useState('password');\n  function toggle(event) {\n    if (passwordType === 'password') setpasswordType('text');else setpasswordType('password');\n  }\n  if (type === 'button') return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formfield\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      name: name,\n      id: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 17\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formfield\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), [\"text\", \"number\", \"email\"].includes(type) && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      name: name,\n      id: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 56\n    }, this), type === 'textarea' && /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: name,\n      id: name,\n      onInput: event => handleSize(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 31\n    }, this), type === 'password' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: passwordType,\n        name: name,\n        id: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"toggle\",\n        onClick: event => toggle(event),\n        children: passwordType === 'password' ? \"Show Password\" : \"Hide Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), type === 'select' && /*#__PURE__*/_jsxDEV(\"select\", {\n      name: name,\n      id: name,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        selected: true,\n        default: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.toLowerCase(),\n        children: option\n      }, option.toLowerCase(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Formfield, \"ziLw3Fg/PRrhyC92vPuaPLjaLx8=\");\n_c2 = Formfield;\nexport default Formfield;\nvar _c, _c2;\n$RefreshReg$(_c, \"OnInput\");\n$RefreshReg$(_c2, \"Formfield\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","handleSize","tx","console","log","OnInput","style","height","scrollHeight","_c","Formfield","_ref","_s","type","name","label","error","options","passwordType","setpasswordType","toggle","event","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","includes","onInput","onClick","value","selected","default","map","option","toLowerCase","_c2","$RefreshReg$"],"sources":["C:/Users/Tejasw/Desktop/project/frontend/src/components/Formfield.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction handleSize(){\r\n    const tx = this\r\n    // for (let i = 0; i < tx.length; i++) {\r\n    //   tx[i].setAttribute(\"style\", \"height:\" + (tx[i].scrollHeight) + \"px;overflow-y:hidden;\");\r\n    //   tx[i].addEventListener(\"input\", OnInput, false);\r\n    // }\r\n    console.log(this)\r\n}\r\n\r\nfunction OnInput() {\r\n  this.style.height = 0;\r\n  this.style.height = (this.scrollHeight) + \"px\";\r\n}\r\n\r\nconst Formfield = ({type, name, label, error, options}) => {\r\n    const [passwordType, setpasswordType] = useState('password')\r\n    function toggle(event){\r\n        if (passwordType==='password') setpasswordType('text'); else setpasswordType('password')\r\n    }\r\n    if(type==='button')\r\n        return (<div className=\"formfield\">\r\n            <button type=\"submit\" name={name} id={name}>{label}</button>\r\n            </div>)\r\n  return (\r\n    <div className=\"formfield\">\r\n        <label htmlFor={name}>\r\n            <h3>{label}</h3>\r\n        </label>\r\n        {[\"text\", \"number\", \"email\"].includes(type) && <input type={type} name={name} id={name}></input>}\r\n        {type==='textarea' && <textarea name={name} id={name} onInput={(event)=>handleSize(event)}></textarea>}\r\n        {type==='password' && \r\n        <>\r\n            <input type={passwordType} name={name} id={name}/>\r\n            <span className=\"toggle\" onClick={(event)=>toggle(event)}>{passwordType==='password' ? \"Show Password\" : \"Hide Password\"}</span>\r\n        </>}\r\n        {type==='select' && <select name={name} id={name}>\r\n            <option value=\"\" selected default></option>\r\n            {options.map(option=>\r\n                <option value={option.toLowerCase()} key={option.toLowerCase()}>{option}\r\n                </option>\r\n            )}\r\n        </select>}\r\n        <div className=\"error\">{error}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Formfield"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}